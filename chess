#include <iostream>
using namespace std;
#include <string>


string blackKing = "BK34";
string whiteKing = "WK45";
string blackKnight = "BK56";
string blackBishop = "BB33";

class game
{
    virtual void start() {}
    virtual void end() {}
};

class chessGame : public game
{
    void start() {}
};

class matrix
{
public:


    int** arr = nullptr;
     int size = 8;

    matrix()
    {
        arr = new int* [size];

        for (int i = 0; i < size; ++i)
        {
            arr[i] = new int[size];
            for (int j = 0; j < size; ++j)
            {
                arr[i][j] = 1;
                cout << arr[i][j] << " ";
            }
            cout << endl;
        }
    }


    matrix(const matrix& obj)
    {
        this->size = obj.size;
        this->arr = new int* [size];

        for (int i = 0; i < size; ++i)
        {
            this->arr[i] = new int[size];
            for (int j = 0; j < size; ++j)
            {
                this->arr[i][j] = obj.arr[i][j];
            }
        }
    }

};

class figure
{
public:

    figure(){}

    string colour;
    string type;
};

class w_king :public matrix
{
public:


    w_king()
    {
        int a = 3;
        int b = 4;

        int dj[] = { -1, -1, -1, 0, 0, 1, 1, 1 }; //j
        int di[] = { -1, 0, 1, -1, 1, -1, 0, 1 }; //i

        for (int i = 0; i < 8; i++)
        {
            int new_i = a + di[i];
            int new_j = b + dj[i];

            if (new_i >= 0 && new_i < size && new_j >= 0 && new_j < size)
                arr[new_j][new_i] = 0;
        }

        for (int i = 0; i < size; ++i)
        {
            for (int j = 0; j < size; ++j)
            {
                cout << arr[i][j] << " ";
            }
            cout << endl;
        }

        cout << endl;
        cout << endl;

        cout << endl;


    }
};


class b_king :public matrix
{
public:
   
    b_king()
    {

        int a = 4;
        int b = 5;

        int dj[] = { -1, -1, -1, 0, 0, 1, 1, 1 }; //j
        int di[] = { -1, 0, 1, -1, 1, -1, 0, 1 }; //i

        for (int i = 0; i < 8; i++)
        {
            int new_i = a + di[i];
            int new_j = b + dj[i];

            if (new_i >= 0 && new_i < size && new_j >= 0 && new_j < size)
                arr[new_j][new_i] = 0;
        }

        for (int i = 0; i < size - 1; ++i)
        {
            for (int j = 0; j < size - 1; ++j)
            {
                cout << arr[i][j] << " ";
            }
            cout << endl;
        }

        cout << endl;
        cout << endl;

        cout << endl;


    }


};


class b_knight : public figure, public matrix
{
public:

   
    b_knight()
    {
        
        int a = 5;
        int b = 6;

        int dj[] = { -2,-2,2,2,-1,-1,1,1 }; //j
        int di[] = { -1,1,-1,1,-2,2,-2,2 }; //i

        for (int i = 0; i < 8; i++)
        {
            int new_i = a + di[i];
            int new_j = b + dj[i];

            if (new_i >= 0 && new_i < size && new_j >= 0 && new_j < size)
                arr[new_j][new_i] = 0;
        }

        for (int i = 0; i < size - 1; ++i)
        {
            for (int j = 0; j < size - 1; ++j)
            {
                cout << arr[i][j] << " ";
            }
            cout << endl;


        }
        cout << endl;
        cout << endl;

        cout << endl;


    }
};
class b_bishop : public matrix, public figure {
public:

    

    b_bishop()
    {

        colour = "black";
        type = "black boat";


        int a = 3;
        int b = 3;


        int dj[] = { -1,-2,-3,-1,-2,-3,1,2,3,4,1,2,3 }; //j
        int di[] = { -1,-2,-3,1,2,3,1,2,3,4,-1,-2,-3 }; //i


        for (int i = 0; i < 13; i++)
        {
            int new_i = a + di[i];
            int new_j = b + dj[i];

            if (new_i >= 0 && new_i < size && new_j >= 0 && new_j < size)
                arr[new_j][new_i] = 0;
        }

        for (int i = 0; i < size - 1; ++i)
        {
            for (int j = 0; j < size - 1; ++j)
            {
                cout << arr[i][j] << " ";
            }
            cout << endl;


        }
        cout << endl;
        cout << endl;

        cout << endl;

    }



};



int main()
{
    game g;
    w_king obj;
    b_king obj1;
    b_knight obj2;
    b_bishop obj3;
    return 0;
}
